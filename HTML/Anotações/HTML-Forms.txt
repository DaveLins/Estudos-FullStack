Formulários HTML
Um formulário HTML é usado para coletar a entrada do usuário. A entrada do usuário é geralmente enviada a um servidor para processamento.

O elemento <form>
O <form>elemento HTML é usado para criar um formulário HTML para entrada do usuário:

<form>
.
form elements
.
</form>
O <form>elemento é um contêiner para diferentes tipos de elementos de entrada, como: campos de texto, caixas de seleção, botões de opção, botões de envio, etc.

Todos os diferentes elementos de formulário são abordados neste capítulo: Elementos de formulário HTML .

O elemento <input>
O <input>elemento HTML é o elemento de formulário mais usado.

Um <input>elemento pode ser exibido de várias maneiras, dependendo do type atributo.

aqui estão alguns exemplos:

Modelo	Descrição
<input type = "text">	Exibe um campo de entrada de texto de linha única
<input type = "radio">	Exibe um botão de opção (para selecionar uma das muitas opções)
<input type = "checkbox">	Exibe uma caixa de seleção (para selecionar zero ou mais de muitas opções)
<input type = "submit">	Exibe um botão de envio (para enviar o formulário)
<input type = "button">	Exibe um botão clicável
Todos os diferentes tipos de entrada são abordados neste capítulo: Tipos de entrada HTML .

Campos de Texto
O <input type="text">define um campo de entrada de linha única para entrada de texto.

Exemplo
Um formulário com campos de entrada para texto:

<form>
  <label for="fname">First name:</label><br>
  <input type="text" id="fname" name="fname"><br>
  <label for="lname">Last name:</label><br>
  <input type="text" id="lname" name="lname">
</form>

O elemento <label>
Observe o uso do <label>elemento no exemplo acima.

A <label>tag define um rótulo para muitos elementos do formulário.

O <label>elemento é útil para usuários de leitores de tela, porque o leitor de tela lerá o rótulo em voz alta quando o usuário focar no elemento de entrada.

O <label>elemento também ajuda os usuários que têm dificuldade em clicar em regiões muito pequenas (como botões de rádio ou caixas de seleção) - porque quando o usuário clica no texto dentro do <label>elemento, ele alterna o botão de rádio / caixa de seleção.

O foratributo da <label>tag deve ser igual ao idatributo do <input> elemento para uni-los.

Botões do rádio
O <input type="radio">define um botão de rádio.

Os botões de opção permitem que o usuário selecione UMA de um número limitado de opções.

Exemplo
Um formulário com botões de opção:

<p>Choose your favorite Web language:</p>

<form>
  <input type="radio" id="html" name="fav_language" value="HTML">
  <label for="html">HTML</label><br>
  <input type="radio" id="css" name="fav_language" value="CSS">
  <label for="css">CSS</label><br>
  <input type="radio" id="javascript" name="fav_language" value="JavaScript">
  <label for="javascript">JavaScript</label>
</form>

Caixas de seleção
O <input type="checkbox">define uma caixa de seleção .

As caixas de seleção permitem que um usuário selecione ZERO ou MAIS opções de um número limitado de escolhas.

Exemplo
Um formulário com caixas de seleção:

<form>
  <input type="checkbox" id="vehicle1" name="vehicle1" value="Bike">
  <label for="vehicle1"> I have a bike</label><br>
  <input type="checkbox" id="vehicle2" name="vehicle2" value="Car">
  <label for="vehicle2"> I have a car</label><br>
  <input type="checkbox" id="vehicle3" name="vehicle3" value="Boat">
  <label for="vehicle3"> I have a boat</label>
</form>

O botão Enviar
O <input type="submit">define um botão para enviar os dados do formulário a um manipulador de formulários.

O manipulador de formulários é normalmente um arquivo no servidor com um script para processar dados de entrada.

O manipulador de formulários é especificado no action atributo do formulário .

Exemplo
Um formulário com um botão de envio:

<form action="/action_page.php">
  <label for="fname">First name:</label><br>
  <input type="text" id="fname" name="fname" value="John"><br>
  <label for="lname">Last name:</label><br>
  <input type="text" id="lname" name="lname" value="Doe"><br><br>
  <input type="submit" value="Submit">
</form>

O atributo de nome para <input>
Observe que cada campo de entrada deve ter um nameatributo a ser enviado.

Se o nameatributo for omitido, o valor do campo de entrada não será enviado.

Exemplo
Este exemplo não enviará o valor do campo de entrada "Nome": 

<form action="/action_page.php">
  <label for="fname">First name:</label><br>
  <input type="text" id="fname" value="John"><br><br>
  <input type="submit" value="Submit">
</form>

Atributos de formulário HTML

Este capítulo descreve os diferentes atributos do <form>elemento HTML .

O Atributo de Ação
O actionatributo define a ação a ser executada quando o formulário é enviado.

Normalmente, os dados do formulário são enviados para um arquivo no servidor quando o usuário clica no botão enviar.

No exemplo abaixo, os dados do formulário são enviados para um arquivo denominado "action_page.php". Este arquivo contém um script do lado do servidor que lida com os dados do formulário:

Exemplo
Ao enviar, envie os dados do formulário para "action_page.php":

<form action="/action_page.php">
  <label for="fname">First name:</label><br>
  <input type="text" id="fname" name="fname" value="John"><br>
  <label for="lname">Last name:</label><br>
  <input type="text" id="lname" name="lname" value="Doe"><br><br>
  <input type="submit" value="Submit">
</form>
Dica: Se o actionatributo for omitido, a ação é definida para a página atual.

O Atributo de Destino
O targetatributo especifica onde exibir a resposta recebida após o envio do formulário.

O targetatributo pode ter um dos seguintes valores:

Value	Description
_blank	The response is displayed in a new window or tab
_self	The response is displayed in the current window
_parent	The response is displayed in the parent frame
_top	The response is displayed in the full body of the window
framename	The response is displayed in a named iframe
O valor padrão é o _selfque significa que a resposta será aberta na janela atual.

Exemplo
Aqui, o resultado enviado será aberto em uma nova guia do navegador:

<form action="/action_page.php" target="_blank">
O atributo do método
O methodatributo especifica o método HTTP a ser usado ao enviar os dados do formulário.

Os dados do formulário podem ser enviados como variáveis ​​de URL (com method="get") ou como transação HTTP post (com method="post").

O método HTTP padrão ao enviar dados do formulário é GET. 

Exemplo
Este exemplo usa o método GET ao enviar os dados do formulário:

<form action="/action_page.php" method="get">
Exemplo
Este exemplo usa o método POST ao enviar os dados do formulário:

<form action="/action_page.php" method="post">
Notas sobre GET:

Acrescenta os dados do formulário ao URL, em pares nome / valor
NUNCA use GET para enviar dados confidenciais! (os dados do formulário enviado são visíveis no URL!)
O comprimento de um URL é limitado (2.048 caracteres)
Útil para envios de formulários onde um usuário deseja marcar o resultado
GET é bom para dados não seguros, como strings de consulta no Google
Notas no POST:

Acrescenta os dados do formulário dentro do corpo da solicitação HTTP (os dados do formulário enviado não são mostrados no URL)
O POST não tem limitações de tamanho e pode ser usado para enviar grandes quantidades de dados.
Os envios de formulários com POST não podem ser marcados
Dica: Sempre use o POST se os dados do formulário contiverem informações confidenciais ou pessoais!

O Atributo de Preenchimento Automático
O autocompleteatributo especifica se um formulário deve ter preenchimento automático ativado ou desativado.

Quando o preenchimento automático está ativado, o navegador completa os valores automaticamente com base nos valores que o usuário inseriu anteriormente.

Exemplo
Um formulário com preenchimento automático em:

<form action="/action_page.php" autocomplete="on">
O Atributo Novalidate
O novalidateatributo é um atributo booleano.

Quando presente, especifica que os dados do formulário (entrada) não devem ser validados ao serem enviados.

Exemplo
Um formulário com um atributo novalidate:

<form action="/action_page.php" novalidate>
Exercícios de HTML
Teste-se com exercícios
Exercício:
Adicione um botão de envio e especifique que o formulário deve ir para "/action_page.php".

<formulário 
action
= "/ action_page.php">
Nome: <input type = "text" name = "name">
<
>
</form>

Comece o exercício

Lista de todos os atributos de <form>
Atributo	Descrição
aceitar charset	Especifica as codificações de caracteres usadas para o envio do formulário
açao	Especifica para onde enviar os dados do formulário quando um formulário é enviado
autocompletar	Especifica se um formulário deve ter preenchimento automático ativado ou desativado
enctipo	Especifica como os dados do formulário devem ser codificados ao enviá-los ao servidor (apenas para method = "post")
método	Especifica o método HTTP a ser usado ao enviar dados do formulário
nome	Especifica o nome do formulário
novalidar	Especifica que o formulário não deve ser validado quando enviado
rel	Especifica a relação entre um recurso vinculado e o documento atual
alvo	Especifica onde exibir a resposta recebida após o envio do formulário

Elementos de Formulário HTML
Este capítulo descreve todos os diferentes elementos de formulário HTML.

Os elementos HTML <form>
O <form>elemento HTML pode conter um ou mais dos seguintes elementos de formulário:

<input>
<label>
<select>
<textarea>
<button>
<fieldset>
<legend>
<datalist>
<output>
<option>
<optgroup>
O elemento <input>
Um dos elementos de formulário mais usados ​​é o <input>elemento.

O <input>elemento pode ser exibido de várias maneiras, dependendo do type atributo.

Exemplo
<label for="fname">First name:</label>
<input type="text" id="fname" name="fname">
Todos os diferentes valores do type atributo são abordados no próximo capítulo: Tipos de entrada HTML .

O elemento <label>
O <label>elemento define um rótulo para vários elementos do formulário.

O <label>elemento é útil para usuários de leitores de tela, porque o leitor de tela lerá o rótulo em voz alta quando o usuário focar no elemento de entrada.

O <label>elemento também ajuda os usuários que têm dificuldade em clicar em regiões muito pequenas (como botões de rádio ou caixas de seleção) - porque quando o usuário clica no texto dentro do <label>elemento, ele alterna o botão de rádio / caixa de seleção.

O foratributo da <label>tag deve ser igual ao idatributo do <input> elemento para uni-los.

O elemento <select>
O <select>elemento define uma lista suspensa:

Exemplo
<label for="cars">Choose a car:</label>
<select id="cars" name="cars">
  <option value="volvo">Volvo</option>
  <option value="saab">Saab</option>
  <option value="fiat">Fiat</option>
  <option value="audi">Audi</option>
</select>
Os <option>elementos definem uma opção que pode ser selecionada.

Por padrão, o primeiro item da lista suspensa é selecionado.

Para definir uma opção pré-selecionada, adicione o selectedatributo à opção:

Exemplo
<option value="fiat" selected>Fiat</option>
Valores visíveis:
Use o sizeatributo para especificar o número de valores visíveis:

Exemplo
<label for="cars">Choose a car:</label>
<select id="cars" name="cars" size="3">
  <option value="volvo">Volvo</option>
  <option value="saab">Saab</option>
  <option value="fiat">Fiat</option>
  <option value="audi">Audi</option>
</select>
Permitir várias seleções:
Use o multipleatributo para permitir que o usuário selecione mais de um valor:

Exemplo
<label for="cars">Choose a car:</label>
<select id="cars" name="cars" size="4" multiple>
  <option value="volvo">Volvo</option>
  <option value="saab">Saab</option>
  <option value="fiat">Fiat</option>
  <option value="audi">Audi</option>
</select>
O elemento <textarea>
O <textarea>elemento define um campo de entrada multilinha (uma área de texto):

Exemplo
<textarea name="message" rows="10" cols="30">
The cat was playing in the garden.
</textarea>
O rowsatributo especifica o número visível de linhas em uma área de texto.

O colsatributo especifica a largura visível de uma área de texto.

É assim que o código HTML acima será exibido em um navegador:

The cat was playing in the garden.

Você também pode definir o tamanho da área de texto usando CSS:

Exemplo
<textarea name="message" style="width:200px; height:600px;">
The cat was playing in the garden.
</textarea>
O elemento <button>
O <button>elemento define um botão clicável:

Exemplo
<button type="button" onclick="alert('Hello World!')">Click Me!</button>
É assim que o código HTML acima será exibido em um navegador:

Clique em mim!
Nota: Sempre especifique o typeatributo para o elemento de botão. Navegadores diferentes podem usar tipos padrão diferentes para o elemento de botão.

Os elementos <fieldset> e <legend>
O <fieldset>elemento é usado para agrupar dados relacionados em um formulário.

O <legend>elemento define uma legenda para o <fieldset> elemento.

Exemplo
<form action="/action_page.php">
  <fieldset>
    <legend>Personalia:</legend>
    <label for="fname">First name:</label><br>
    <input type="text" id="fname" name="fname" value="John"><br>
    <label for="lname">Last name:</label><br>
    <input type="text" id="lname" name="lname" value="Doe"><br><br>
    <input type="submit" value="Submit">
  </fieldset>
</form>
É assim que o código HTML acima será exibido em um navegador:

Personalia:
Primeiro nome:
John

Último nome:
Doe


O elemento <datalist>
O <datalist>elemento especifica uma lista de opções predefinidas para um <input>elemento.

Os usuários verão uma lista suspensa das opções predefinidas à medida que inserem os dados.

O listatributo do <input>elemento deve se referir ao idatributo do <datalist>elemento.

Exemplo
<form action="/action_page.php">
  <input list="browsers">
  <datalist id="browsers">
    <option value="Internet Explorer">
    <option value="Firefox">
    <option value="Chrome">
    <option value="Opera">
    <option value="Safari">
  </datalist>
</form>
O elemento <output>
O <output>elemento representa o resultado de um cálculo (como um executado por um script).

Exemplo
Faça um cálculo e mostre o resultado em um <output>elemento:

<form action="/action_page.php"
  oninput="x.value=parseInt(a.value)+parseInt(b.value)">
  0
  <input type="range"  id="a" name="a" value="50">
  100 +
  <input type="number" id="b" name="b" value="50">
  =
  <output name="x" for="a b"></output>
  <br><br>
  <input type="submit">
</form>
Exercícios de HTML
Teste-se com exercícios
Exercício:
No formulário abaixo, adicione uma lista suspensa vazia com o nome "carros".

<form action = "/ action_page.php">
<
input lis="carros"
>
</
>
</form>

Comece o exercício

Elementos de Formulário HTML
Tag	Description
<form>	Defines an HTML form for user input
<input>	Defines an input control
<textarea>	Defines a multiline input control (text area)
<label>	Defines a label for an <input> element
<fieldset>	Groups related elements in a form
<legend>	Defines a caption for a <fieldset> element
<select>	Defines a drop-down list
<optgroup>	Defines a group of related options in a drop-down list
<option>	Defines an option in a drop-down list
<button>	Defines a clickable button
<datalist>	Specifies a list of pre-defined options for input controls
<output>	Defines the result of a calculation

Tipos de entrada HTML
Este capítulo descreve os diferentes tipos de <input>elemento HTML .

Tipos de entrada HTML
Aqui estão os diferentes tipos de entrada que você pode usar em HTML:

<input type="button">
<input type="checkbox">
<input type="color">
<input type="date">
<input type="datetime-local">
<input type="email">
<input type="file">
<input type="hidden">
<input type="image">
<input type="month">
<input type="number">
<input type="password">
<input type="radio">
<input type="range">
<input type="reset">
<input type="search">
<input type="submit">
<input type="tel">
<input type="text">
<input type="time">
<input type="url">
<input type="week">
Dica: o valor padrão do typeatributo é "text".

Texto do tipo de entrada
<input type="text">define um campo de entrada de texto de linha única :

Exemplo
<form>
  <label for="fname">First name:</label><br>
  <input type="text" id="fname" name="fname"><br>
  <label for="lname">Last name:</label><br>
  <input type="text" id="lname" name="lname">
</form>
É assim que o código HTML acima será exibido em um navegador:

Primeiro nome:

Último nome:

Senha do tipo de entrada
<input type="password">define um campo de senha :

Exemplo
<form>
  <label for="username">Username:</label><br>
  <input type="text" id="username" name="username"><br>
  <label for="pwd">Password:</label><br>
  <input type="password" id="pwd" name="pwd">
</form>
É assim que o código HTML acima será exibido em um navegador:

Nome do usuário:
dd

Senha:
••••
Os caracteres em um campo de senha são mascarados (mostrados como asteriscos ou círculos).

Enviar tipo de entrada
<input type="submit">define um botão para enviar dados de formulário a um manipulador de formulários .

O manipulador de formulários é normalmente uma página do servidor com um script para processar dados de entrada.

O manipulador de formulários é especificado no action atributo do formulário :

Exemplo
<form action="/action_page.php">
  <label for="fname">First name:</label><br>
  <input type="text" id="fname" name="fname" value="John"><br>
  <label for="lname">Last name:</label><br>
  <input type="text" id="lname" name="lname" value="Doe"><br><br>
  <input type="submit" value="Submit">
</form>
É assim que o código HTML acima será exibido em um navegador:

Primeiro nome:
John

Último nome:
Doe


Se você omitir o atributo de valor do botão de envio, o botão obterá um texto padrão:

Exemplo
<form action="/action_page.php">
  <label for="fname">First name:</label><br>
  <input type="text" id="fname" name="fname" value="John"><br>
  <label for="lname">Last name:</label><br>
  <input type="text" id="lname" name="lname" value="Doe"><br><br>
  <input type="submit">
</form>
Reinicialização do tipo de entrada
<input type="reset">define um botão de redefinição que redefinirá todos os valores do formulário para seus valores padrão:

Exemplo
<form action="/action_page.php">
  <label for="fname">First name:</label><br>
  <input type="text" id="fname" name="fname" value="John"><br>
  <label for="lname">Last name:</label><br>
  <input type="text" id="lname" name="lname" value="Doe"><br><br>
  <input type="submit" value="Submit">
  <input type="reset">
</form>
É assim que o código HTML acima será exibido em um navegador:

Primeiro nome:
John

Último nome:
Doe


 
Se você alterar os valores de entrada e clicar no botão "Redefinir", os dados do formulário serão redefinidos para os valores padrão.

Rádio do tipo de entrada
<input type="radio">define um botão de opção .

Os botões de opção permitem que um usuário selecione APENAS UMA de um número limitado de opções:

Exemplo
<p>Choose your favorite Web language:</p>

<form>
  <input type="radio" id="html" name="fav_language" value="HTML">
  <label for="html">HTML</label><br>
  <input type="radio" id="css" name="fav_language" value="CSS">
  <label for="css">CSS</label><br>
  <input type="radio" id="javascript" name="fav_language" value="JavaScript">
  <label for="javascript">JavaScript</label>
</form>
É assim que o código HTML acima será exibido em um navegador:

 HTML
 CSS
 JavaScript
Caixa de seleção do tipo de entrada
<input type="checkbox">define uma caixa de seleção .

As caixas de seleção permitem que um usuário selecione ZERO ou MAIS opções de um número limitado de escolhas.

Exemplo
<form>
  <input type="checkbox" id="vehicle1" name="vehicle1" value="Bike">
  <label for="vehicle1"> I have a bike</label><br>
  <input type="checkbox" id="vehicle2" name="vehicle2" value="Car">
  <label for="vehicle2"> I have a car</label><br>
  <input type="checkbox" id="vehicle3" name="vehicle3" value="Boat">
  <label for="vehicle3"> I have a boat</label>
</form>
É assim que o código HTML acima será exibido em um navegador:

 eu tenho uma bicicleta
 Eu tenho um carro
 Eu tenho um barco
Botão de tipo de entrada
<input type="button">define um botão :

Exemplo
<input type="button" onclick="alert('Hello World!')" value="Click Me!">
É assim que o código HTML acima será exibido em um navegador:

Cor do tipo de entrada
O <input type="color">é usado para campos de entrada que devem conter uma cor.

Dependendo do suporte do navegador, um seletor de cores pode aparecer no campo de entrada.

Exemplo
<form>
  <label for="favcolor">Select your favorite color:</label>
  <input type="color" id="favcolor" name="favcolor">
</form>
Data do tipo de entrada
O <input type="date">é usado para campos de entrada que devem conter uma data.

Dependendo do suporte do navegador, um selecionador de data pode aparecer no campo de entrada.

Exemplo
<form>
  <label for="birthday">Birthday:</label>
  <input type="date" id="birthday" name="birthday">
</form>
Você também pode usar os atributos mine maxpara adicionar restrições às datas:

Exemplo
<form>
  <label for="datemax">Enter a date before 1980-01-01:</label>
  <input type="date" id="datemax" name="datemax" max="1979-12-31"><br><br>
  <label for="datemin">Enter a date after 2000-01-01:</label>
  <input type="date" id="datemin" name="datemin" min="2000-01-02">
</form>
Tipo de entrada data e hora - local
O <input type="datetime-local">especifica um campo de entrada de data e hora, sem fuso horário.

Dependendo do suporte do navegador, um selecionador de data pode aparecer no campo de entrada.

Exemplo
<form>
  <label for="birthdaytime">Birthday (date and time):</label>
  <input type="datetime-local" id="birthdaytime" name="birthdaytime">
</form>
E-mail do tipo de entrada
O <input type="email">é usado para campos de entrada que devem conter um endereço de e-mail.

Dependendo do suporte do navegador, o endereço de e-mail pode ser validado automaticamente quando enviado.

Alguns smartphones reconhecem o tipo de e-mail e adicionam ".com" ao teclado para corresponder à entrada de e-mail.

Exemplo
<form>
  <label for="email">Enter your email:</label>
  <input type="email" id="email" name="email">
</form>
Arquivo de tipo de entrada
O <input type="file"> define um campo de seleção de arquivo e um botão "Procurar" para uploads de arquivo.

Exemplo
<form>
  <label for="myfile">Select a file:</label>
  <input type="file" id="myfile" name="myfile">
</form>
Tipo de entrada oculto
O <input type="hidden"> define um campo de entrada oculto (não visível para o usuário).

Um campo oculto permite que os desenvolvedores da web incluam dados que não podem ser vistos ou modificados pelos usuários quando um formulário é enviado.

Um campo oculto geralmente armazena qual registro de banco de dados precisa ser atualizado quando o formulário é enviado.

Observação: embora o valor não seja exibido para o usuário no conteúdo da página, ele é visível (e pode ser editado) usando as ferramentas de desenvolvedor de qualquer navegador ou a funcionalidade "Exibir código-fonte". Não use entradas ocultas como forma de segurança!

Exemplo
<form>
  <label for="fname">First name:</label>
  <input type="text" id="fname" name="fname"><br><br>
  <input type="hidden" id="custId" name="custId" value="3487">
  <input type="submit" value="Submit">
</form>
Mês do tipo de entrada
O <input type="month">permite ao usuário selecionar um mês e ano.

Dependendo do suporte do navegador, um selecionador de data pode aparecer no campo de entrada.

Exemplo
<form>
  <label for="bdaymonth">Birthday (month and year):</label>
  <input type="month" id="bdaymonth" name="bdaymonth">
</form>
Número do tipo de entrada
O <input type="number">define um campo de entrada numérico .

Você também pode definir restrições sobre quais números são aceitos.

O exemplo a seguir exibe um campo de entrada numérico, onde você pode inserir um valor de 1 a 5:

Exemplo
<form>
  <label for="quantity">Quantity (between 1 and 5):</label>
  <input type="number" id="quantity" name="quantity" min="1" max="5">
</form>
Restrições de entrada
Aqui está uma lista de algumas restrições de entrada comuns:

Attribute	Description
checked	Specifies that an input field should be pre-selected when the page loads (for type="checkbox" or type="radio")
disabled	Specifies that an input field should be disabled
max	Specifies the maximum value for an input field
maxlength	Specifies the maximum number of character for an input field
min	Specifies the minimum value for an input field
pattern	Specifies a regular expression to check the input value against
readonly	Specifies that an input field is read only (cannot be changed)
required	Specifies that an input field is required (must be filled out)
size	Specifies the width (in characters) of an input field
step	Specifies the legal number intervals for an input field
value	Specifies the default value for an input field
Você aprenderá mais sobre as restrições de entrada no próximo capítulo.

O exemplo a seguir exibe um campo de entrada numérica, onde você pode inserir um valor de 0 a 100, em etapas de 10. O valor padrão é 30:

Exemplo
<form>
  <label for="quantity">Quantity:</label>
  <input type="number" id="quantity" name="quantity" min="0" max="100" step="10" value="30">
</form>
Faixa de tipo de entrada
O <input type="range">define um controle para inserir um número cujo valor exato não é importante (como um controle deslizante). Intervalo padrão é de 0 a 100. No entanto, você pode definir restrições sobre o que os números são aceitos com o min, maxe stepatributos:

Exemplo
<form>
  <label for="vol">Volume (between 0 and 50):</label>
  <input type="range" id="vol" name="vol" min="0" max="50">
</form>
Pesquisa de tipo de entrada
O <input type="search">é usado para campos de pesquisa (um campo de pesquisa se comporta como um campo de texto normal).

Exemplo
<form>
  <label for="gsearch">Search Google:</label>
  <input type="search" id="gsearch" name="gsearch">
</form>
Tipo de entrada Tel
O <input type="tel">é usado para campos de entrada que devem conter um número de telefone.

Exemplo
<form>
  <label for="phone">Enter your phone number:</label>
  <input type="tel" id="phone" name="phone" pattern="[0-9]{3}-[0-9]{2}-[0-9]{3}">
</form>
Tempo do tipo de entrada
O <input type="time">permite que o usuário selecione um horário (sem fuso horário).

Dependendo do suporte do navegador, um seletor de hora pode aparecer no campo de entrada.

Exemplo
<form>
  <label for="appt">Select a time:</label>
  <input type="time" id="appt" name="appt">
</form>
URL do tipo de entrada
O <input type="url">é usado para campos de entrada que devem conter um endereço de URL.

Dependendo do suporte do navegador, o campo url pode ser validado automaticamente quando enviado.

Alguns smartphones reconhecem o tipo de url e adicionam ".com" ao teclado para corresponder à entrada do url.

Exemplo
<form>
  <label for="homepage">Add your homepage:</label>
  <input type="url" id="homepage" name="homepage">
</form>
Semana do tipo de entrada
O <input type="week">permite ao usuário selecionar uma semana e um ano.

Dependendo do suporte do navegador, um selecionador de data pode aparecer no campo de entrada.

Exemplo
<form>
  <label for="week">Select a week:</label>
  <input type="week" id="week" name="week">
</form>

Atributos de entrada HTML
Este capítulo descreve os diferentes atributos do <input>elemento HTML .

O valor Attribute
O valueatributo input especifica um valor inicial para um campo de entrada:

Exemplo
Campos de entrada com valores iniciais (padrão):

<form>
  <label for="fname">First name:</label><br>
  <input type="text" id="fname" name="fname" value="John"><br>
  <label for="lname">Last name:</label><br>
  <input type="text" id="lname" name="lname" value="Doe">
</form>
O atributo somente leitura
O readonlyatributo input especifica que um campo de entrada é somente leitura.

Um campo de entrada somente leitura não pode ser modificado (no entanto, um usuário pode tabular até ele, destacá-lo e copiar o texto dele).

O valor de um campo de entrada somente leitura será enviado ao enviar o formulário!

Exemplo
Um campo de entrada somente leitura:

<form>
  <label for="fname">First name:</label><br>
  <input type="text" id="fname" name="fname" value="John" readonly><br>
  <label for="lname">Last name:</label><br>
  <input type="text" id="lname" name="lname" value="Doe">
</form>
O atributo desativado
O disabledatributo input especifica que um campo de entrada deve ser desabilitado.

Um campo de entrada desativado é inutilizável e não clicável.

O valor de um campo de entrada desabilitado não será enviado ao enviar o formulário!

Exemplo
Um campo de entrada desativado:

<form>
  <label for="fname">First name:</label><br>
  <input type="text" id="fname" name="fname" value="John" disabled><br>
  <label for="lname">Last name:</label><br>
  <input type="text" id="lname" name="lname" value="Doe">
</form>
O atributo de tamanho
O sizeatributo input especifica a largura visível, em caracteres, de um campo de entrada.

O valor padrão para sizeé 20.

Observação: o sizeatributo funciona com os seguintes tipos de entrada: texto, pesquisa, tel, url, e-mail e senha.

Exemplo
Defina a largura de um campo de entrada:

<form>
  <label for="fname">First name:</label><br>
  <input type="text" id="fname" name="fname" size="50"><br>
  <label for="pin">PIN:</label><br>
  <input type="text" id="pin" name="pin" size="4">
</form>
O atributo maxlength
O maxlengthatributo input especifica o número máximo de caracteres permitidos em um campo de entrada.

Observação: quando a maxlengthé definido, o campo de entrada não aceita mais do que o número especificado de caracteres. No entanto, este atributo não fornece nenhum feedback. Portanto, se você deseja alertar o usuário, deve escrever o código JavaScript.

Exemplo
Defina um comprimento máximo para um campo de entrada:

<form>
  <label for="fname">First name:</label><br>
  <input type="text" id="fname" name="fname" size="50"><br>
  <label for="pin">PIN:</label><br>
  <input type="text" id="pin" name="pin" maxlength="4" size="4">
</form>
Os atributos mínimo e máximo
A entrada mine os maxatributos especificam os valores mínimo e máximo para um campo de entrada.

Os atributos mine maxfuncionam com os seguintes tipos de entrada: número, intervalo, data, data / hora local, mês, hora e semana.

Dica: Use os atributos max e min juntos para criar um intervalo de valores legais.

Exemplo
Defina uma data máxima, uma data mínima e um intervalo de valores legais:

<form>
  <label for="datemax">Enter a date before 1980-01-01:</label>
  <input type="date" id="datemax" name="datemax" max="1979-12-31"><br><br>

  <label for="datemin">Enter a date after 2000-01-01:</label>
  <input type="date" id="datemin" name="datemin" min="2000-01-02"><br><br>

  <label for="quantity">Quantity (between 1 and 5):</label>
  <input type="number" id="quantity" name="quantity" min="1" max="5">
</form>
O Atributo Múltiplo
O multipleatributo input especifica que o usuário tem permissão para inserir mais de um valor em um campo de entrada.

O multipleatributo funciona com os seguintes tipos de entrada: e-mail e arquivo.

Exemplo
Um campo de upload de arquivo que aceita vários valores:

<form>
  <label for="files">Select files:</label>
  <input type="file" id="files" name="files" multiple>
</form>
O atributo padrão
O patternatributo input especifica uma expressão regular com a qual o valor do campo de entrada é verificado, quando o formulário é enviado.

O patternatributo funciona com os seguintes tipos de entrada: texto, data, pesquisa, url, tel, e-mail e senha.

Dica: Use o atributo de título global para descrever o padrão para ajudar o usuário.

Dica: Aprenda mais sobre expressões regulares em nosso tutorial de JavaScript.

Exemplo
Um campo de entrada que pode conter apenas três letras (sem números ou caracteres especiais):

<form>
  <label for="country_code">Country code:</label>
  <input type="text" id="country_code" name="country_code"
  pattern="[A-Za-z]{3}" title="Three letter country code">
</form>
O atributo placeholder
O placeholderatributo input especifica uma pequena dica que descreve o valor esperado de um campo de entrada (um valor de amostra ou uma breve descrição do formato esperado).

A dica curta é exibida no campo de entrada antes que o usuário insira um valor.

O placeholderatributo funciona com os seguintes tipos de entrada: texto, pesquisa, url, tel, e-mail e senha.

Exemplo
Um campo de entrada com um texto de espaço reservado:

<form>
  <label for="phone">Enter a phone number:</label>
  <input type="tel" id="phone" name="phone"
  placeholder="123-45-678"
  pattern="[0-9]{3}-[0-9]{2}-[0-9]{3}">
</form>
O atributo necessário
O requiredatributo input especifica que um campo de entrada deve ser preenchido antes de enviar o formulário.

O requiredatributo funciona com os seguintes tipos de entrada: texto, pesquisa, url, tel, e-mail, senha, selecionadores de data, número, caixa de seleção, rádio e arquivo.

Exemplo
Um campo de entrada obrigatório:

<form>
  <label for="username">Username:</label>
  <input type="text" id="username" name="username" required>
</form>
O atributo da etapa
O stepatributo input especifica os intervalos de números legais para um campo de entrada.

Exemplo: se etapa = "3", os números legais podem ser -3, 0, 3, 6, etc.

Dica: Este atributo pode ser usado junto com os atributos max e min para criar um intervalo de valores legais.

O stepatributo funciona com os seguintes tipos de entrada: número, intervalo, data, data / hora local, mês, hora e semana.

Exemplo
Um campo de entrada com intervalos de números legais especificados:

<form>
  <label for="points">Points:</label>
  <input type="number" id="points" name="points" step="3">
</form>
Nota: As restrições de entrada não são infalíveis e o JavaScript fornece muitas maneiras de adicionar entradas ilegais. Para restringir a entrada com segurança, ela também deve ser verificada pelo receptor (o servidor)!

O Atributo de foco automático
O autofocusatributo input especifica que um campo de entrada deve receber foco automaticamente quando a página é carregada.

Exemplo
Deixe o campo de entrada "Nome" obter o foco automaticamente quando a página carregar:

<form>
  <label for="fname">First name:</label><br>
  <input type="text" id="fname" name="fname" autofocus><br>
  <label for="lname">Last name:</label><br>
  <input type="text" id="lname" name="lname">
</form>
Os atributos de altura e largura
A entrada heighte os widthatributos especificam a altura e a largura de um <input type="image">elemento.

Dica: Sempre especifique os atributos de altura e largura das imagens. Se a altura e a largura forem definidas, o espaço necessário para a imagem será reservado quando a página for carregada. Sem esses atributos, o navegador não sabe o tamanho da imagem e não pode reservar o espaço apropriado para ela. O efeito será que o layout da página mudará durante o carregamento (enquanto as imagens carregam).

Exemplo
Defina uma imagem como o botão de envio, com atributos de altura e largura:

<form>
  <label for="fname">First name:</label>
  <input type="text" id="fname" name="fname"><br><br>
  <label for="lname">Last name:</label>
  <input type="text" id="lname" name="lname"><br><br>
  <input type="image" src="img_submit.gif" alt="Submit" width="48" height="48">
</form>
O atributo da lista
O listatributo input se refere a um <datalist>elemento que contém opções predefinidas para um elemento <input>.

Exemplo
Um elemento <input> com valores predefinidos em um <datalist>:

<form>
  <input list="browsers">
  <datalist id="browsers">
    <option value="Internet Explorer">
    <option value="Firefox">
    <option value="Chrome">
    <option value="Opera">
    <option value="Safari">
  </datalist>
</form>
O atributo autocomplete
O autocompleteatributo input especifica se um formulário ou campo de entrada deve ter o preenchimento automático ativado ou desativado.

O preenchimento automático permite que o navegador preveja o valor. Quando um usuário começa a digitar em um campo, o navegador deve exibir opções para preencher o campo, com base nos valores digitados anteriormente.

O autocompleteatributo funciona com <form>os seguintes <input>tipos: texto, pesquisa, url, tel, e-mail, senha, selecionadores de data, intervalo e cor.

Exemplo
Um formulário HTML com preenchimento automático ativado e desativado para um campo de entrada:

<form action="/action_page.php" autocomplete="on">
  <label for="fname">First name:</label>
  <input type="text" id="fname" name="fname"><br><br>
  <label for="lname">Last name:</label>
  <input type="text" id="lname" name="lname"><br><br>
  <label for="email">Email:</label>
  <input type="email" id="email" name="email" autocomplete="off"><br><br>
  <input type="submit" value="Submit">
</form>

Formulário de entrada HTML * Atributos
Este capítulo descreve os diferentes form*atributos do <input>elemento HTML .

O formulário Attribute
O formatributo input especifica o formulário ao qual o <input>elemento pertence.

O valor deste atributo deve ser igual ao atributo id do elemento <form> ao qual pertence.

Exemplo
Um campo de entrada localizado fora do formulário HTML (mas ainda faz parte do formulário):

<form action="/action_page.php" id="form1">
  <label for="fname">First name:</label>
  <input type="text" id="fname" name="fname"><br><br>
  <input type="submit" value="Submit">
</form>

<label for="lname">Last name:</label>
<input type="text" id="lname" name="lname" form="form1">
O atributo de formação
O formactionatributo input especifica a URL do arquivo que irá processar a entrada quando o formulário for enviado.

Nota: este atributo substitui o actionatributo do <form>elemento.

O formactionatributo funciona com os seguintes tipos de entrada: enviar e imagem.

Exemplo
Um formulário HTML com dois botões de envio, com ações diferentes:

<form action="/action_page.php">
  <label for="fname">First name:</label>
  <input type="text" id="fname" name="fname"><br><br>
  <label for="lname">Last name:</label>
  <input type="text" id="lname" name="lname"><br><br>
  <input type="submit" value="Submit">
  <input type="submit" formaction="/action_page2.php" value="Submit as Admin">
</form>
O atributo formenctype
O formenctype atributo input especifica como os dados do formulário devem ser codificados quando enviados (somente para formulários com method = "post").

Nota: Este atributo substitui o atributo enctype do <form>elemento.

O formenctypeatributo funciona com os seguintes tipos de entrada: enviar e imagem.

Exemplo
Um formulário com dois botões de envio. O primeiro envia os dados do formulário com codificação padrão, o segundo envia os dados do formulário codificados como "multipart / form-data":

<form action="/action_page_binary.asp" method="post">
  <label for="fname">First name:</label>
  <input type="text" id="fname" name="fname"><br><br>
  <input type="submit" value="Submit">
  <input type="submit" formenctype="multipart/form-data"
  value="Submit as Multipart/form-data">
</form>
O atributo formmethod
O formmethod atributo input define o método HTTP para enviar dados do formulário para o URL de ação.

Nota: Este atributo substitui o atributo de método do <form>elemento.

O formmethodatributo funciona com os seguintes tipos de entrada: enviar e imagem.

Os dados do formulário podem ser enviados como variáveis ​​de URL (método = "get") ou como uma transação HTTP post (método = "post").

Notas sobre o método "get":

Este método anexa os dados do formulário ao URL em pares nome / valor
Este método é útil para envios de formulários onde um usuário deseja marcar o resultado
Há um limite para a quantidade de dados que você pode colocar em um URL (varia entre os navegadores), portanto, você não pode ter certeza de que todos os dados do formulário serão transferidos corretamente
Nunca use o método "get" para passar informações confidenciais! (a senha ou outras informações confidenciais estarão visíveis na barra de endereço do navegador)
Notas sobre o método "post":

Este método envia os dados do formulário como uma transação HTTP post
Os envios de formulários com o método "post" não podem ser marcados
O método "post" é mais robusto e seguro do que "get", e "post" não tem limitações de tamanho
Exemplo
Um formulário com dois botões de envio. O primeiro envia os dados do formulário com o método = "get". O segundo envia os dados do formulário com method = "post":

<form action="/action_page.php" method="get">
  <label for="fname">First name:</label>
  <input type="text" id="fname" name="fname"><br><br>
  <label for="lname">Last name:</label>
  <input type="text" id="lname" name="lname"><br><br>
  <input type="submit" value="Submit using GET">
  <input type="submit" formmethod="post" value="Submit using POST">
</form>
O atributo formtarget
O formtargetatributo input especifica um nome ou uma palavra-chave que indica onde exibir a resposta recebida após o envio do formulário.

Nota: Este atributo substitui o atributo target do <form>elemento.

O formtargetatributo funciona com os seguintes tipos de entrada: enviar e imagem.

Exemplo
Um formulário com dois botões de envio, com janelas de destino diferentes:

<form action="/action_page.php">
  <label for="fname">First name:</label>
  <input type="text" id="fname" name="fname"><br><br>
  <label for="lname">Last name:</label>
  <input type="text" id="lname" name="lname"><br><br>
  <input type="submit" value="Submit">
  <input type="submit" formtarget="_blank" value="Submit to a new window/tab">
</form>
O atributo formnovalidate
O formnovalidateatributo input especifica que um elemento <input> não deve ser validado quando enviado.

Nota: Este atributo substitui o atributo novalidate do <form> elemento.

O formnovalidateatributo funciona com os seguintes tipos de entrada: enviar.

Exemplo
Um formulário com dois botões de envio (com e sem validação):

<form action="/action_page.php">
  <label for="email">Enter your email:</label>
  <input type="email" id="email" name="email"><br><br>
  <input type="submit" value="Submit">
  <input type="submit" formnovalidate="formnovalidate"
  value="Submit without validation">
</form>
O atributo novalidate
O novalidateatributo é um <form>atributo.

Quando presente, novalidate especifica que todos os dados do formulário não devem ser validados quando enviados.

Exemplo
Especifique que nenhum dado do formulário deve ser validado no envio:

<form action="/action_page.php" novalidate>
  <label for="email">Enter your email:</label>
  <input type="email" id="email" name="email"><br><br>
  <input type="submit" value="Submit">
</form>
Formulário HTML e elementos de entrada
Tag	Description
<form>	Defines an HTML form for user input
<input>	Defines an input control